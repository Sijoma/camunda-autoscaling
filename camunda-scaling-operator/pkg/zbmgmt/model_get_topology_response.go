/*
Cluster Topology Management API

API for managing cluster membership and partition distribution.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zbmgmt

import (
	"encoding/json"
)

// checks if the GetTopologyResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTopologyResponse{}

// GetTopologyResponse Current topology of the cluster
type GetTopologyResponse struct {
	// The version of the topology
	Version       *int64           `json:"version,omitempty"`
	Brokers       []BrokerState    `json:"brokers,omitempty"`
	LastChange    *CompletedChange `json:"lastChange,omitempty"`
	PendingChange *TopologyChange  `json:"pendingChange,omitempty"`
}

// NewGetTopologyResponse instantiates a new GetTopologyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTopologyResponse() *GetTopologyResponse {
	this := GetTopologyResponse{}
	return &this
}

// NewGetTopologyResponseWithDefaults instantiates a new GetTopologyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTopologyResponseWithDefaults() *GetTopologyResponse {
	this := GetTopologyResponse{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *GetTopologyResponse) GetVersion() int64 {
	if o == nil || IsNil(o.Version) {
		var ret int64
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTopologyResponse) GetVersionOk() (*int64, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *GetTopologyResponse) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int64 and assigns it to the Version field.
func (o *GetTopologyResponse) SetVersion(v int64) {
	o.Version = &v
}

// GetBrokers returns the Brokers field value if set, zero value otherwise.
func (o *GetTopologyResponse) GetBrokers() []BrokerState {
	if o == nil || IsNil(o.Brokers) {
		var ret []BrokerState
		return ret
	}
	return o.Brokers
}

// GetBrokersOk returns a tuple with the Brokers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTopologyResponse) GetBrokersOk() ([]BrokerState, bool) {
	if o == nil || IsNil(o.Brokers) {
		return nil, false
	}
	return o.Brokers, true
}

// HasBrokers returns a boolean if a field has been set.
func (o *GetTopologyResponse) HasBrokers() bool {
	if o != nil && !IsNil(o.Brokers) {
		return true
	}

	return false
}

// SetBrokers gets a reference to the given []BrokerState and assigns it to the Brokers field.
func (o *GetTopologyResponse) SetBrokers(v []BrokerState) {
	o.Brokers = v
}

// GetLastChange returns the LastChange field value if set, zero value otherwise.
func (o *GetTopologyResponse) GetLastChange() CompletedChange {
	if o == nil || IsNil(o.LastChange) {
		var ret CompletedChange
		return ret
	}
	return *o.LastChange
}

// GetLastChangeOk returns a tuple with the LastChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTopologyResponse) GetLastChangeOk() (*CompletedChange, bool) {
	if o == nil || IsNil(o.LastChange) {
		return nil, false
	}
	return o.LastChange, true
}

// HasLastChange returns a boolean if a field has been set.
func (o *GetTopologyResponse) HasLastChange() bool {
	if o != nil && !IsNil(o.LastChange) {
		return true
	}

	return false
}

// SetLastChange gets a reference to the given CompletedChange and assigns it to the LastChange field.
func (o *GetTopologyResponse) SetLastChange(v CompletedChange) {
	o.LastChange = &v
}

// GetPendingChange returns the PendingChange field value if set, zero value otherwise.
func (o *GetTopologyResponse) GetPendingChange() TopologyChange {
	if o == nil || IsNil(o.PendingChange) {
		var ret TopologyChange
		return ret
	}
	return *o.PendingChange
}

// GetPendingChangeOk returns a tuple with the PendingChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTopologyResponse) GetPendingChangeOk() (*TopologyChange, bool) {
	if o == nil || IsNil(o.PendingChange) {
		return nil, false
	}
	return o.PendingChange, true
}

// HasPendingChange returns a boolean if a field has been set.
func (o *GetTopologyResponse) HasPendingChange() bool {
	if o != nil && !IsNil(o.PendingChange) {
		return true
	}

	return false
}

// SetPendingChange gets a reference to the given TopologyChange and assigns it to the PendingChange field.
func (o *GetTopologyResponse) SetPendingChange(v TopologyChange) {
	o.PendingChange = &v
}

func (o GetTopologyResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTopologyResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Brokers) {
		toSerialize["brokers"] = o.Brokers
	}
	if !IsNil(o.LastChange) {
		toSerialize["lastChange"] = o.LastChange
	}
	if !IsNil(o.PendingChange) {
		toSerialize["pendingChange"] = o.PendingChange
	}
	return toSerialize, nil
}

type NullableGetTopologyResponse struct {
	value *GetTopologyResponse
	isSet bool
}

func (v NullableGetTopologyResponse) Get() *GetTopologyResponse {
	return v.value
}

func (v *NullableGetTopologyResponse) Set(val *GetTopologyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTopologyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTopologyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTopologyResponse(val *GetTopologyResponse) *NullableGetTopologyResponse {
	return &NullableGetTopologyResponse{value: val, isSet: true}
}

func (v NullableGetTopologyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTopologyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
